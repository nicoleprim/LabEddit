[{"/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/index.js":"1","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/App.js":"2","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Routes/Router.js":"3","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Pages/PostDetailPage/PostDetailPage.js":"4","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Pages/ErrorPage/ErrorPage.js":"5","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Pages/SignUpPage/SignUpPage.js":"6","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Pages/PostListPage/PostListPage.js":"7","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Pages/LoginPage/LoginPage.js":"8","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Components/Header/Header.js":"9","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Routes/Coordinator.js":"10","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Pages/LoginPage/Styled.js":"11","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Hooks/useForm.js":"12","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Constants/urls.js":"13","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Pages/SignUpPage/Styled.js":"14","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Services/User.js":"15","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Hooks/useProtectedPage.js":"16","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Hooks/useUnprotectedPage.js":"17","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Hooks/useRequestData.js":"18","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Components/CardPost/Card.js":"19","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Services/Posts.js":"20","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Components/CardComments/CardComments.js":"21","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Components/Loading/Loading.js":"22","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Components/Loading/Styled.js":"23","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Components/Header/Styled.js":"24","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Pages/PostListPage/Styled.js":"25","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Components/CardPost/Styled.js":"26","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Pages/PostDetailPage/Styled.js":"27","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Components/CardComments/Styled.js":"28"},{"size":233,"mtime":1658760966497,"results":"29","hashOfConfig":"30"},{"size":510,"mtime":1658968022435,"results":"31","hashOfConfig":"30"},{"size":1047,"mtime":1659135527822,"results":"32","hashOfConfig":"30"},{"size":4576,"mtime":1659137115918,"results":"33","hashOfConfig":"30"},{"size":120,"mtime":1658764250617,"results":"34","hashOfConfig":"30"},{"size":2501,"mtime":1658973172462,"results":"35","hashOfConfig":"30"},{"size":3613,"mtime":1659135854807,"results":"36","hashOfConfig":"30"},{"size":2025,"mtime":1658870037799,"results":"37","hashOfConfig":"30"},{"size":2279,"mtime":1658944103183,"results":"38","hashOfConfig":"30"},{"size":364,"mtime":1658769878769,"results":"39","hashOfConfig":"30"},{"size":2846,"mtime":1659131925811,"results":"40","hashOfConfig":"30"},{"size":376,"mtime":1658773028110,"results":"41","hashOfConfig":"30"},{"size":58,"mtime":1659131409979,"results":"42","hashOfConfig":"30"},{"size":2050,"mtime":1659131941307,"results":"43","hashOfConfig":"30"},{"size":1226,"mtime":1658968310785,"results":"44","hashOfConfig":"30"},{"size":368,"mtime":1658851737794,"results":"45","hashOfConfig":"30"},{"size":387,"mtime":1658841197636,"results":"46","hashOfConfig":"30"},{"size":598,"mtime":1658867055261,"results":"47","hashOfConfig":"30"},{"size":1566,"mtime":1659135009882,"results":"48","hashOfConfig":"30"},{"size":1066,"mtime":1659133677112,"results":"49","hashOfConfig":"30"},{"size":1174,"mtime":1659038338739,"results":"50","hashOfConfig":"30"},{"size":258,"mtime":1658871503452,"results":"51","hashOfConfig":"30"},{"size":144,"mtime":1659040500695,"results":"52","hashOfConfig":"30"},{"size":292,"mtime":1659015484331,"results":"53","hashOfConfig":"30"},{"size":1675,"mtime":1659131850788,"results":"54","hashOfConfig":"30"},{"size":1693,"mtime":1659043400449,"results":"55","hashOfConfig":"30"},{"size":1777,"mtime":1659132002476,"results":"56","hashOfConfig":"30"},{"size":1811,"mtime":1659044731402,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fx7hkb",{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/index.js",[],[],"/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/App.js",["152"],[],"import React from \"react\";\nimport Router from './Routes/Router'\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, toast } from 'react-toastify';\n\nfunction App() {\n  return (\n    <>\n        <ToastContainer\n        position=\"top-center\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <Router />\n    </>\n  );\n}\n\nexport default App;\n","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Routes/Router.js",[],[],"/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Pages/PostDetailPage/PostDetailPage.js",["153","154","155"],[],"import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { BASE_URL } from '../../Constants/urls'\nimport { useProtectedPage } from '../../Hooks/useProtectedPage'\nimport { useRequestData } from '../../Hooks/useRequestData'\nimport CardComments from '../../Components/CardComments/CardComments'\nimport { useForm } from '../../Hooks/useForm'\nimport { createComment } from '../../Services/Posts'\nimport LoadingLogin from '../../Assets/loadinglogin.gif'\nimport Loading from '../../Components/Loading/Loading'\nimport { Post, User, Text, Icones, IconesUm, Comentarios, Dados } from '../../Components/CardPost/Styled'\nimport Comentario from '../../Assets/comentarios.svg'\nimport FlechaUm from '../../Assets/cima.svg'\nimport FlechaDois from '../../Assets/baixo.svg'\nimport { Container } from './Styled'\nimport Line from '../../Assets/Line.svg'\nimport { ContainerForm, ContainerPost, Inputs, InputDois, ButtonForm, DivLine } from './Styled'\nimport axios from 'axios'\n\nconst PostDetailPage = () => {\n  useProtectedPage()\n  const params = useParams()\n  const [refresh, setRefresh] = useState(false)\n  const [like, setLike] = useState(false)\n  const [dislike, setDislike] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const comments = useRequestData([], `${BASE_URL}/posts/${params.id}/comments`, refresh)\n  const { form, onChange, cleanFields } = useForm({ body: \"\" })\n  const posts = useRequestData([], `${BASE_URL}/posts`, refresh)\n\n  const onSubmitForm = (event) => {\n    event.preventDefault()\n    createComment(form, params.id, cleanFields, setRefresh, refresh, setIsLoading)\n  }\n\n  const voteLike = (id) => {\n    if (like === true) {\n      voteRemove(setLike, like, id)\n      setLike(!like)\n    } else {\n      const body = { direction: 1 }\n      axios.post(`${BASE_URL}/comments/${id}/votes`, body, {\n        headers: {\n          Authorization: localStorage.getItem(\"token\")\n        }\n      }).then((res) => {\n        setLike(!like)\n        setRefresh(!refresh)\n      }).catch((err) => {\n        console.log(err.response)\n      })\n    }\n  }\n\n  const voteDislike = (id) => {\n    if (dislike === true) {\n      voteRemove(setDislike, dislike, id)\n      setDislike(!dislike)\n    } else {\n      const body = { direction: -1 }\n      axios.put(`${BASE_URL}/comments/${id}/votes`, body, {\n        headers: {\n          Authorization: localStorage.getItem(\"token\")\n        }\n      })\n        .then((res) => {\n          setDislike(!dislike)\n          setRefresh(!refresh)\n        })\n        .catch((err) => {\n          alert(err.response)\n        })\n    }\n  }\n\n  const voteRemove = (setVote, voteName, id) => {\n    axios.delete(`${BASE_URL}/comments/${id}/votes`, {\n      headers: {\n        Authorization: localStorage.getItem(\"token\")\n      }\n    })\n      .then((res) => {\n        setVote(!voteName)\n        setRefresh(!refresh)\n      })\n      .catch((err) => {\n        alert(err.response.data)\n      })\n  }\n\n  const getPost = posts.map((post) => {\n    if (post.id === params.id) {\n      return (\n        <ContainerPost>\n        <Container>\n          <User>Enviado por: {post.username} </User>\n          <Text> {post.body} </Text>\n          <Icones>\n            <IconesUm>\n              <img src={FlechaUm} alt=\"ícone flecha\" />\n              <p>{post.voteSum} </p>\n              <img src={FlechaDois} alt=\"ícone flecha\" />\n            </IconesUm>\n            <Comentarios> <img src={Comentario} alt=\"ícone comentarios\" />  <p>{post.commentCount}</p> </Comentarios>\n          </Icones>\n        </Container>\n      </ContainerPost>\n      )\n    }else {\n      return (<div key={post.id}></div>)\n    }\n  })\n\n  return (\n    <>\n      {comments ?\n        <>\n        {getPost}\n          <ContainerForm onSubmit={onSubmitForm}>\n            <Inputs>\n              <InputDois\n                name=\"body\"\n                type=\"text\"\n                onChange={onChange}\n                value={form.body}\n                placeholder=\"Adicionar comentário\"\n                required\n              />\n            </Inputs>\n            <ButtonForm>\n              <button type=\"submit\">\n                {isLoading ? <img width={'30px'} src={LoadingLogin} alt=\"gif carregando\" /> : <>Responder</>}\n              </button>\n            </ButtonForm>\n          </ContainerForm>\n          <DivLine>\n            <img src={Line} alt=\"linha\" />\n          </DivLine>\n          <CardComments comments={comments} voteLike={voteLike} voteDislike={voteDislike} />\n        </>\n        : <Loading />\n      }\n    </>\n  )\n}\n\nexport default PostDetailPage","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Pages/ErrorPage/ErrorPage.js",[],[],"/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Pages/SignUpPage/SignUpPage.js",["156","157","158"],[],"import React from 'react'\nimport axios from 'axios'\nimport { useNavigate } from 'react-router-dom'\nimport { Form, InputUm, InputDois, Inputs } from '../LoginPage/Styled'\nimport { useForm } from '../../Hooks/useForm'\nimport { BASE_URL } from '../../Constants/urls'\nimport { goToPostListPage } from '../../Routes/Coordinator'\nimport { InputTres, DivTitulo, Check, DivP, ButtonForm } from './Styled'\nimport {useUnprotectedPage} from '../../Hooks/useUnprotectedPage'\nimport { signUp } from '../../Services/User'\nimport { useState } from 'react'\nimport LoadingLogin from '../../Assets/loadinglogin.gif'\n\nconst SignUpPage = () => {\n  useUnprotectedPage()\n  const { form, onChange, cleanFields } = useForm({username: \"\", email: \"\", password: \"\" })\n  const [isLoading, setIsLoading] = useState(false)\n  const navigate = useNavigate()\n\n  const onSubmitForm = (event) => {\n    event.preventDefault()\n    signUp(form, cleanFields, navigate, setIsLoading)\n  }\n\n\n  return (\n    <>\n      <DivTitulo>\n        <h2>Olá, boas vindas ao LabEddit ;)</h2>\n      </DivTitulo>\n      <Form onSubmit={onSubmitForm}>\n        <Inputs>\n        <InputTres\n            name=\"username\"\n            type=\"text\"\n            onChange={onChange}\n            value={form.username}\n            placeholder=\"Nome de usuário *\"\n            required\n          />\n          <InputUm\n            name=\"email\"\n            type=\"email\"\n            onChange={onChange}\n            value={form.email}\n            placeholder=\"E-mail *\"\n            required\n          />\n          <InputDois\n            name=\"password\"\n            type=\"password\"\n            onChange={onChange}\n            value={form.password}\n            placeholder=\"Senha *\"\n            pattern={'^.{8,30}'}\n            title={\"A senha deve conter no mínimo 8 e no máximo 30 caracteres\"}\n            required\n          />\n        </Inputs>\n        <DivP>\n        <p>Ao continuar, você concorda com o nosso <a href=\"http://www.google.com.br\">Contrato de Usuário</a> e nossa <a href=\"http://www.google.com.br\">Política de Privacidade </a>.</p>\n        <Check>\n        <input type=\"checkbox\"/>\n        <p>Eu concordo em receber emails sobre coisas legais no LabEddit</p>\n        </Check>\n        </DivP>\n        <ButtonForm>\n          <button type=\"submit\">\n          {isLoading? <img width={'30px'} src={LoadingLogin} alt=\"gif carregando\"/> : <>Cadastrar</>}\n            \n            </button>\n        </ButtonForm>\n      </Form>\n    </>\n  )\n}\n\nexport default SignUpPage","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Pages/PostListPage/PostListPage.js",[],[],"/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Pages/LoginPage/LoginPage.js",["159"],[],"import React, { useState } from 'react'\nimport Logo from '../../Assets/Logo.svg'\nimport { DivImg, DivP, Form, InputUm, InputDois, ButtonForm, Inputs, DivLine, ButtonSign } from './Styled'\nimport { useForm } from '../../Hooks/useForm'\nimport Line from '../../Assets/Line.svg'\nimport { goToSignUpPage, goToPostListPage } from '../../Routes/Coordinator'\nimport { useNavigate } from 'react-router-dom'\nimport { login } from '../../Services/User'\nimport {useUnprotectedPage} from '../../Hooks/useUnprotectedPage'\nimport LoadingLogin from '../../Assets/loadinglogin.gif'\n\nconst LoginPage = () => {\n  useUnprotectedPage()\n  const { form, onChange, cleanFields } = useForm({ email: \"\", password: \"\" })\n  const [isLoading, setIsLoading] = useState(false)\n  const navigate = useNavigate()\n\n  const onSubmitForm = (event) => {\n    event.preventDefault()\n    login(form, cleanFields, navigate, setIsLoading)\n  }\n\n\n\n  return (\n    <>\n      <DivImg>\n        <img src={Logo} alt=\"imagem logo\" />\n      </DivImg>\n      <DivP>\n        <p>O projeto de rede social da Labenu</p>\n      </DivP>\n      <Form onSubmit={onSubmitForm}>\n        <Inputs>\n          <InputUm\n            name=\"email\"\n            type=\"email\"\n            onChange={onChange}\n            value={form.email}\n            placeholder=\"E-mail *\"\n            required\n          />\n          <InputDois\n            name=\"password\"\n            type=\"password\"\n            onChange={onChange}\n            value={form.password}\n            placeholder=\"Senha *\"\n            required\n          />\n        </Inputs>\n        <ButtonForm>\n          <button type=\"submit\" >\n          {isLoading? <img width={'30px'} src={LoadingLogin} alt=\"gif carregando\"/> : <>Continuar</>}\n            \n            </button>\n      \n        </ButtonForm>\n      </Form>\n      <DivLine>\n        <img src={Line} alt=\"linha\" />\n      </DivLine>\n      <ButtonSign>\n        <button onClick={() => goToSignUpPage(navigate)}>Crie uma conta!</button>\n      </ButtonSign>\n    </>\n  )\n}\n\nexport default LoginPage","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Components/Header/Header.js",[],[],"/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Routes/Coordinator.js",[],[],"/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Pages/LoginPage/Styled.js",[],[],"/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Hooks/useForm.js",[],[],"/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Constants/urls.js",[],[],"/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Pages/SignUpPage/Styled.js",[],[],"/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Services/User.js",["160","161","162"],[],"import { useNavigate } from 'react-router-dom'\nimport { BASE_URL } from '../Constants/urls'\nimport axios from 'axios'\nimport { goToSignUpPage, goToPostListPage } from '../Routes/Coordinator'\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, toast } from 'react-toastify';\n\nexport const login = (body, cleanFields, navigate, setIsLoading) => {\n  setIsLoading(true)\n    axios.post(`${BASE_URL}/users/login`, body)\n        .then((response) => {\n            localStorage.setItem('token', response.data.token)\n            goToPostListPage(navigate)\n            cleanFields()\n            setIsLoading(false)\n        }).catch((error) => {\n            setIsLoading(false)\n            toast.error(\"Usuário ou senha inválidos\")\n            cleanFields()\n\n        })\n}\n\nexport const signUp = (body, cleanFields, navigate, setIsLoading) => {\n  setIsLoading(true)\n    axios.post(`${BASE_URL}/users/signup`, body)\n      .then((response) => {\n        localStorage.setItem('token', response.data.token)\n        goToPostListPage(navigate)\n        cleanFields()\n        setIsLoading(false)\n      }).catch((error) => {\n        setIsLoading(false)\n        toast.error(\"Tente novamente\")\n        cleanFields()\n      })\n  }","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Hooks/useProtectedPage.js",[],[],"/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Hooks/useUnprotectedPage.js",[],[],"/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Hooks/useRequestData.js",["163"],[],"import React from 'react'\nimport axios from 'axios'\nimport { useState, useEffect } from 'react'\n\n\nexport function useRequestData(initialData, url, refresh) {\n    const [data, setData] = useState(initialData);\n\n    useEffect(() => {\n        axios.get(url, {\n                headers: {\n                    Authorization: localStorage.getItem('token')\n                }\n            })\n            .then((res) => {\n                setData(res.data);\n            })\n            .catch((err) => {\n                console.log(err.response.data);\n            })\n    }, [url, refresh])\n    return ( data )\n}","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Components/CardPost/Card.js",["164","165"],[],"import React from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { goToPostDetailPage } from '../../Routes/Coordinator'\nimport { Post, ContainerPost, IconesUm, Comentarios, User, Text, Icones, Container, Dados } from './Styled'\nimport Comentario from '../../Assets/comentarios.svg'\nimport FlechaUm from '../../Assets/cima.svg'\nimport FlechaDois from '../../Assets/baixo.svg'\nconst Card = (props) => {\n    const navigate = useNavigate()\n\n    const goTo = ( id) => {\n        goToPostDetailPage(navigate, id)\n    }\n\n    const postCard = props.posts.map((post) => {\n        return (\n            <Container key={post.id}>\n                <User>Enviado por: {post.username} </User>\n                <Text> {post.body} </Text>\n                <Icones>\n                <IconesUm>\n                    <button onClick={() => props.voteLike(post.id)}>\n                        <img src={FlechaUm} alt=\"ícone flecha\" />\n                    </button>\n                    <p>  {post.voteSum} </p>\n                    <button onClick={() => props.voteDislike(post.id)}>\n                        <img src={FlechaDois} alt=\"ícone flecha\" />\n                    </button>\n                </IconesUm>\n                <Comentarios onClick={() => goTo(post.id)}>\n                    <img src={Comentario} alt=\"ícone comentarios\" />\n                    <p>{post.commentCount}</p>\n                </Comentarios>\n                </Icones>\n            </Container>\n        )\n    })\n\n\n\n    return (\n        <ContainerPost>{postCard}</ContainerPost>\n    )\n}\n\nexport default Card","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Services/Posts.js",["166"],[],"import axios from \"axios\"\nimport { BASE_URL } from \"../Constants/urls\"\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, toast } from 'react-toastify';\n\n export const createPost = (body, cleanFields, setRefresh, refresh, setIsLoading) => {\n    setIsLoading(true)\n    axios.post(`${BASE_URL}/posts`, body, {\n        headers: {\n            Authorization: localStorage.getItem(\"token\")\n        }\n    }).then((res) => {\n        cleanFields()\n        setIsLoading(false)\n        setRefresh(!refresh)\n        toast.success(\"Post criado com sucesso\")\n    }).catch((err) => {\n        setIsLoading(false)\n      })\n}\n\nexport const createComment = (body, id, cleanFields, setRefresh, refresh, setIsLoading) => {\n    setIsLoading(true)\n    axios.post(`${BASE_URL}/posts/${id}/comments`, body, {\n    headers: {\n        Authorization: localStorage.getItem(\"token\")\n    }\n}).then((res) => {\n    cleanFields()\n    setIsLoading(false)\n    setRefresh(!refresh)\n    toast.success(\"Comentário criado com sucesso\")\n}).catch((err) => {\n    setIsLoading(false)\n})\n}","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Components/CardComments/CardComments.js",["167","168"],[],"import React from 'react'\nimport FlechaUm from '../../Assets/cima.svg'\nimport FlechaDois from '../../Assets/baixo.svg'\nimport { ContainerPost, IconesUm, Container, Post, Icones, Dados, User, Text } from './Styled'\n\nconst CardComments = (props) => {\n\n    const commentsCard = props.comments.map((comment) => {\n        return (\n\n            <Container key={comment.id}>\n                <User>Enviado por: {comment.username} </User>\n                <Text> {comment.body} </Text>\n                <Icones>\n                    <IconesUm>\n                        <button onClick={() => props.voteLike(comment.id)}>\n                            <img src={FlechaUm} alt=\"ícone flecha\" />\n                        </button>\n                        <p>{comment.voteSum}</p>\n                        <button onClick={() => props.voteDislike(comment.id)}>\n                            <img src={FlechaDois} alt=\"ícone flecha\" />\n                        </button>\n                    </IconesUm>\n                </Icones>\n            </Container>\n        )\n    })\n\n    return (\n        <ContainerPost>\n            {commentsCard}\n        </ContainerPost>\n    )\n}\n\nexport default CardComments","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Components/Loading/Loading.js",["169"],[],"import React from 'react'\nimport LoadingPages from '../../Assets/loading.gif'\nimport { LoadingStyled } from './Styled'\n\nconst Loading = () => {\n  return (\n      <LoadingStyled>\n    <img src={LoadingPages} />\n    </LoadingStyled>\n  )\n}\n\nexport default Loading","/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Components/Loading/Styled.js",[],[],"/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Components/Header/Styled.js",[],[],"/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Pages/PostListPage/Styled.js",[],[],"/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Components/CardPost/Styled.js",[],[],"/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Pages/PostDetailPage/Styled.js",[],[],"/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Components/CardComments/Styled.js",[],[],{"ruleId":"170","severity":1,"message":"171","line":4,"column":26,"nodeType":"172","messageId":"173","endLine":4,"endColumn":31},{"ruleId":"170","severity":1,"message":"174","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":26},{"ruleId":"170","severity":1,"message":"175","line":11,"column":10,"nodeType":"172","messageId":"173","endLine":11,"endColumn":14},{"ruleId":"170","severity":1,"message":"176","line":11,"column":59,"nodeType":"172","messageId":"173","endLine":11,"endColumn":64},{"ruleId":"170","severity":1,"message":"177","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":13},{"ruleId":"170","severity":1,"message":"178","line":6,"column":10,"nodeType":"172","messageId":"173","endLine":6,"endColumn":18},{"ruleId":"170","severity":1,"message":"179","line":7,"column":10,"nodeType":"172","messageId":"173","endLine":7,"endColumn":26},{"ruleId":"170","severity":1,"message":"179","line":6,"column":26,"nodeType":"172","messageId":"173","endLine":6,"endColumn":42},{"ruleId":"170","severity":1,"message":"180","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":21},{"ruleId":"170","severity":1,"message":"181","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":24},{"ruleId":"170","severity":1,"message":"182","line":6,"column":10,"nodeType":"172","messageId":"173","endLine":6,"endColumn":24},{"ruleId":"170","severity":1,"message":"183","line":1,"column":8,"nodeType":"172","messageId":"173","endLine":1,"endColumn":13},{"ruleId":"170","severity":1,"message":"175","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":14},{"ruleId":"170","severity":1,"message":"176","line":4,"column":85,"nodeType":"172","messageId":"173","endLine":4,"endColumn":90},{"ruleId":"170","severity":1,"message":"182","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":24},{"ruleId":"170","severity":1,"message":"175","line":4,"column":46,"nodeType":"172","messageId":"173","endLine":4,"endColumn":50},{"ruleId":"170","severity":1,"message":"176","line":4,"column":60,"nodeType":"172","messageId":"173","endLine":4,"endColumn":65},{"ruleId":"184","severity":1,"message":"185","line":8,"column":5,"nodeType":"186","endLine":8,"endColumn":31},"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Post' is defined but never used.","'Dados' is defined but never used.","'axios' is defined but never used.","'BASE_URL' is defined but never used.","'goToPostListPage' is defined but never used.","'useNavigate' is defined but never used.","'goToSignUpPage' is defined but never used.","'ToastContainer' is defined but never used.","'React' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]