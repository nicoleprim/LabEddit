{"ast":null,"code":"import axios from \"axios\";\nimport { BASE_URL } from \"../Constants/urls\";\nexport const createPost = (body, cleanFields, setRefresh, refresh, setIsLoading) => {\n  setIsLoading(true);\n  axios.post(`${BASE_URL}/posts`, body, {\n    headers: {\n      Authorization: localStorage.getItem(\"token\")\n    }\n  }).then(res => {\n    console.log(res);\n    cleanFields();\n    setIsLoading(false);\n    setRefresh(!refresh);\n  }).catch(err => {\n    console.log(err.response);\n    setIsLoading(false);\n  });\n};\nexport const createComment = (body, id, cleanFields, setRefresh, refresh, setIsLoading) => {\n  setIsLoading(true);\n  axios.post(`${BASE_URL}/posts/${id}/comments`, body, {\n    headers: {\n      Authorization: localStorage.getItem(\"token\")\n    }\n  }).then(res => {\n    console.log(res);\n    cleanFields();\n    setIsLoading(false);\n    setRefresh(!refresh);\n  }).catch(err => {\n    console.log(err.response);\n    setIsLoading(false);\n  });\n};","map":{"version":3,"names":["axios","BASE_URL","createPost","body","cleanFields","setRefresh","refresh","setIsLoading","post","headers","Authorization","localStorage","getItem","then","res","console","log","catch","err","response","createComment","id"],"sources":["/home/nicole/alves-Nicole-Prim/modulo3/projeto-labeddit/projeto-labbedit/src/Services/Posts.js"],"sourcesContent":["import axios from \"axios\"\nimport { BASE_URL } from \"../Constants/urls\"\n\n export const createPost = (body, cleanFields, setRefresh, refresh, setIsLoading) => {\n    setIsLoading(true)\n    axios.post(`${BASE_URL}/posts`, body, {\n        headers: {\n            Authorization: localStorage.getItem(\"token\")\n        }\n    }).then((res) => {\n        console.log(res)\n        cleanFields()\n        setIsLoading(false)\n        setRefresh(!refresh)\n    }).catch((err) => {\n        console.log(err.response)\n        setIsLoading(false)\n      })\n}\n\nexport const createComment = (body, id, cleanFields, setRefresh, refresh, setIsLoading) => {\n    setIsLoading(true)\n    axios.post(`${BASE_URL}/posts/${id}/comments`, body, {\n    headers: {\n        Authorization: localStorage.getItem(\"token\")\n    }\n}).then((res) => {\n    console.log(res)\n    cleanFields()\n    setIsLoading(false)\n    setRefresh(!refresh)\n\n}).catch((err) => {\n    console.log(err.response)\n    setIsLoading(false)\n})\n}\n\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEC,OAAO,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,WAAP,EAAoBC,UAApB,EAAgCC,OAAhC,EAAyCC,YAAzC,KAA0D;EACjFA,YAAY,CAAC,IAAD,CAAZ;EACAP,KAAK,CAACQ,IAAN,CAAY,GAAEP,QAAS,QAAvB,EAAgCE,IAAhC,EAAsC;IAClCM,OAAO,EAAE;MACLC,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;IADV;EADyB,CAAtC,EAIGC,IAJH,CAISC,GAAD,IAAS;IACbC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACAV,WAAW;IACXG,YAAY,CAAC,KAAD,CAAZ;IACAF,UAAU,CAAC,CAACC,OAAF,CAAV;EACH,CATD,EASGW,KATH,CASUC,GAAD,IAAS;IACdH,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,QAAhB;IACAZ,YAAY,CAAC,KAAD,CAAZ;EACD,CAZH;AAaH,CAfO;AAiBR,OAAO,MAAMa,aAAa,GAAG,CAACjB,IAAD,EAAOkB,EAAP,EAAWjB,WAAX,EAAwBC,UAAxB,EAAoCC,OAApC,EAA6CC,YAA7C,KAA8D;EACvFA,YAAY,CAAC,IAAD,CAAZ;EACAP,KAAK,CAACQ,IAAN,CAAY,GAAEP,QAAS,UAASoB,EAAG,WAAnC,EAA+ClB,IAA/C,EAAqD;IACrDM,OAAO,EAAE;MACLC,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;IADV;EAD4C,CAArD,EAIDC,IAJC,CAIKC,GAAD,IAAS;IACbC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACAV,WAAW;IACXG,YAAY,CAAC,KAAD,CAAZ;IACAF,UAAU,CAAC,CAACC,OAAF,CAAV;EAEH,CAVG,EAUDW,KAVC,CAUMC,GAAD,IAAS;IACdH,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,QAAhB;IACAZ,YAAY,CAAC,KAAD,CAAZ;EACH,CAbG;AAcH,CAhBM"},"metadata":{},"sourceType":"module"}